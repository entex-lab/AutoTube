<% 
import cgi
import random
import datetime
import gdata.youtube
import gdata.youtube.service

# function start here

def PrintEntryDetails( entry, index) :
	vurl = entry.GetSwfUrl()
	t = vurl.split('v/')[1]
	avid = t.split('?f')[0]
	req.write( '<tr>')
	req.write( '<td rowspan="2"')
	req.write( '<span class="img"><a id="aimg%d" onclick="javascript: changeTitle( \'video_title\', \'%s\')" href="javascript: changeVideo(\'%s\')" ><img src="%s" /></a></span><br />' % ( index, entry.media.title.text.replace( '\'', '\\\'').replace( '\"', '\\\''), avid, entry.media.thumbnail[random.randint( 0,2)].url))
	req.write( '<span id="ttime%d" class="time">%s</span>' %( index, datetime.timedelta( seconds=int(entry.media.duration.seconds))))
	req.write( '</td>')
	req.write( '<td>')
	req.write( '<span class="title"><a id="atitle_%d" href="javascript: changeVideo(\'%s\')" onclick="javascript: changeTitle( \'video_title\', \'%s\')" >%s</a></span><br />' % ( index, avid, entry.media.title.text.replace( '\'', '\\\'').replace( '\"', '\\\''), entry.media.title.text))
	req.write( '</td>')                                          
	req.write( '</tr>')
	req.write( '<tr>')
	req.write( '<td>')
	req.write( '<span id="tview_count%d" class="view_count">View Count: %s</span><br />' % ( index, entry.statistics.view_count))
	req.write( '</td>')
	req.write( '</tr>')

def PrintVideoFeed( feed, current = None) :
	if not feed.entry :
		req.write( '<center><b><p><font color="red">Result not found.</font></p></b></center>')
	else :
		index = 0
		req.write( '<table border="0">')
		for entry in feed.entry :
			if not entry.noembed :
				if not current and current == entry.GetSwfUrl(): 
					continue
				PrintEntryDetails( entry, index)
				index = index + 1
			else :
				continue
			if index == 10 :
				break
		req.write( '</table>')

def SearchAndPrint( search_terms):
	yt_service = gdata.youtube.service.YouTubeService()
	query = gdata.youtube.service.YouTubeVideoQuery()
	query.vq = search_terms 
	query.orderby = 'relevance'
	query.racy = 'include'
	feed = yt_service.YouTubeQuery(query)
	PrintVideoFeed( feed)

def GetRelatedFeed( videoid, url) :
	yt_service = gdata.youtube.service.YouTubeService()
	related_feed = yt_service.GetYouTubeRelatedVideoFeed( video_id = videoid)
	PrintVideoFeed( related_feed, url)

term = form.getfirst('term')
if term :
	SearchAndPrint( term)

related = form.getfirst('related')
if related :
	url = related
	tmp = related.split('v=')[1]
	related = tmp.split('&')[0]
	GetRelatedFeed( related, url)

%>
